<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AD///wA///+AB///wE///+Cf///5f///+///////
</value>
  </data>
</root>